{"ast":null,"code":"var _jsxFileName = \"/home/levi/myreactapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextFrom from \"./components/TextFrom\";\nimport { useState } from \"react\";\nimport Alerts from \"./components/Alerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState(\"dark\");\n  const [alert, setalert] = useState(null);\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#151658\";\n      document.body.style.color = \"white\";\n      type = \"Enable light mode \";\n    } else {\n      setmode(\"light\");\n      document.body.style.color = \"black\";\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      togglemode: togglemode,\n      aboutus: \"about us\",\n      home: \"home\",\n      mode: mode,\n      type: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alerts, {\n      alerts: \"this is alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TextFrom, {\n        heading: \"this is text from\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"uXFd6ADnqDaPLAo020ZzLllGE0Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["type","About","Navbar","TextFrom","useState","Alerts","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setalert","togglemode","document","body","style","backgroundColor","color","children","title","aboutus","home","fileName","_jsxFileName","lineNumber","columnNumber","alerts","className","heading","_c","$RefreshReg$"],"sources":["/home/levi/myreactapp/src/App.js"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextFrom from \"./components/TextFrom\";\nimport { useState } from \"react\";\nimport Alerts from \"./components/Alerts\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"dark\");\n  const [alert, setalert] = useState(null);\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#151658\";\n      document.body.style.color = \"white\";\n\n      type = \"Enable light mode \";\n    } else {\n      setmode(\"light\");\n      document.body.style.color = \"black\";\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        togglemode={togglemode}\n        aboutus=\"about us\"\n        home=\"home\"\n        mode={mode}\n        type={togglemode}\n      />\n      <Alerts alerts=\"this is alerts\" />\n      <div className=\"container\">\n        <TextFrom heading=\"this is text from\" mode={mode} />\n      </div>\n      {/* <div className=\"conatiner\">\n        <About />\n      </div> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,uCAAuC;AAC5D,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIJ,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MAEnCrB,IAAI,GAAG,oBAAoB;IAC7B,CAAC,MAAM;MACLa,OAAO,CAAC,OAAO,CAAC;MAChBI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C;EACF,CAAC;EACD,oBACEb,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA,CAACL,MAAM;MACLqB,KAAK,EAAC,WAAW;MACjBP,UAAU,EAAEA,UAAW;MACvBQ,OAAO,EAAC,UAAU;MAClBC,IAAI,EAAC,MAAM;MACXb,IAAI,EAAEA,IAAK;MACXZ,IAAI,EAAEgB;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFtB,OAAA,CAACF,MAAM;MAACyB,MAAM,EAAC;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCtB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAT,QAAA,eACxBf,OAAA,CAACJ,QAAQ;QAAC6B,OAAO,EAAC,mBAAmB;QAACpB,IAAI,EAAEA;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA,eAIN,CAAC;AAEP;AAAClB,EAAA,CAnCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}