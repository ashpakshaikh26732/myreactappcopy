{"ast":null,"code":"var _jsxFileName = \"/home/levi/myreactapp/src/components/TextFrom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextFrom(props) {\n  _s();\n  const [text, setText] = useState(\"enter the text\");\n  const clicked = () => {\n    // console.log(\"button is clicked \" + text);\n    let newtext = text.toUpperCase();\n    setText(newtext);\n  };\n  const changehasdone = event => {\n    console.log(\"this is change \");\n    setText(event.target.value);\n  };\n  const lowercase = () => {\n    // console.log(\"button has been clicked \" + text);\n    let newtext = text.toLowerCase();\n    setText(newtext);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      \"my-3\": true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: changehasdone,\n          id: \"mybox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-btn-primary\",\n          onClick: clicked,\n          children: \"Convert to uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"lowercase\",\n          onClick: lowercase,\n          children: \"Convert to lowercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      \"my-3\": true,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your text summary \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length - 1, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * (text.split(\" \").length - 1), \" time requried to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextFrom, \"35QCG86tNYi0e9GVAZUG0W4Ps+4=\");\n_c = TextFrom;\nTextFrom.prototype = {\n  heading: PropTypes.string.isRequired\n};\nTextFrom.defaultProps = {\n  heading: \"enter text here \"\n};\nvar _c;\n$RefreshReg$(_c, \"TextFrom\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TextFrom","props","_s","text","setText","clicked","newtext","toUpperCase","changehasdone","event","console","log","target","value","lowercase","toLowerCase","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","split","length","_c","prototype","string","isRequired","defaultProps","$RefreshReg$"],"sources":["/home/levi/myreactapp/src/components/TextFrom.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function TextFrom(props) {\n  const [text, setText] = useState(\"enter the text\");\n  const clicked = () => {\n    // console.log(\"button is clicked \" + text);\n    let newtext = text.toUpperCase();\n    setText(newtext);\n  };\n  const changehasdone = (event) => {\n    console.log(\"this is change \");\n    setText(event.target.value);\n  };\n  const lowercase = () => {\n    // console.log(\"button has been clicked \" + text);\n    let newtext = text.toLowerCase();\n    setText(newtext);\n  };\n  return (\n    <>\n      <div className=\"container\" my-3>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={changehasdone}\n            id=\"mybox\"\n            rows=\"8\"\n          ></textarea>\n          <button className=\"btn-btn-primary\" onClick={clicked}>\n            Convert to uppercase\n          </button>\n          <button className=\"lowercase\" onClick={lowercase}>\n            Convert to lowercase\n          </button>\n        </div>\n      </div>\n      <div className=\"container\" my-3>\n        <h3>Your text summary </h3>\n        <p>\n          {text.split(\" \").length - 1} words and {text.length} characters\n        </p>\n        <p>{0.008 * (text.split(\" \").length - 1)} time requried to read</p>\n      </div>\n    </>\n  );\n}\nTextFrom.prototype = {\n  heading: PropTypes.string.isRequired,\n};\nTextFrom.defaultProps = {\n  heading: \"enter text here \",\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}